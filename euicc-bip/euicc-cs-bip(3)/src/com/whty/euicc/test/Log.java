package com.whty.euicc.test;

public class Log {
/*2016-8-4 
 * 现在基本的SMS短信触发 以及OpenChannel sendData的解析已经完成，但代码问题
 *  1、比如在获得卡片OpenChannel的时候有一个终端回复，需要拼装ChannelNumber，但现在只是固定设的值
 *  2、在这一过程中，重要的是OpenChannel以及sendData中命令的获取，在c++中将OpenChannel命令获取到以后再次调用一个SendCmd的方法
 *    专门用来获取返回的值 其实两个可以再同一个方法里卖弄进行发送喔，我可以设置一波标识符，传送过去。并进行相应的判断
 *    在前面虽然代码比较乱，但已经有了一个卡片初始化的方法，以及0348短信下行的方法，还有比如Data avaliable、terminalResponse等等 
 *    但其实我可以不用管数据类型是什么，【虽然表面上是不用管，但是根据脚本每一次操作还附加其它很多操作，我都需要进行不同的和卡片的交互啊，唉 所以还是
 *    相当于进行了各种判断】*/
	
	//OpenChannel__TERMINAL RESPONSE: 801400001D8103014003 82028281830100 【channel Status】38 02 2200 【Bearer_description_tag】350702020405051002 [buffer size]3902 0578
    //
	//lRet = SCardConnect(*m_pContext, (LPCTSTR)strCOMNum.c_str(), SCARD_SHARE_SHARED, SCARD_PROTOCOL_T0|SCARD_PROTOCOL_T1, &m_IC, &m_dwIC);

	/*搞了半天，原来是自己对卡端的触发不熟悉和了解，花了一天的时间来调试呢，终于小通了。卡片初始化以及复位一次才行=-=每次在c++里面复位得太多了  终于
	 * 而且，按照现在这种路线来看的话，我只需要卡片初始化的时候调用一次Init和复位，其他的时候都只用直接sendText即可，这边不用太多的方法*/
	// ok 今天的任务初步完成 嘿嘿嘿嘿
	
	/*2016/8/5     星期五
	 *  到现在完成了获取卡端的OpenChannel 以及 sendData命令：
	 *  在安装应用的时候，分为多条指令：
	 *  80140000FF0103014200820282818301003681ED170303018000010203040506070809AABBCCDDEEFFC88C791855C1996407FB11A073B073E8617A14409ACD56E96A867D4315C613735967252FC2CE9A1B5F829BF25996A278393CD98BFCAD8272FB4472DB74496619B8221E5B5A83CAE77BDB7B31112A7009F21F9927BBD92E8B6039A225D98B8253BD0A31F2ED65559BBF9E86D192CF401DD7A1497808BAAF30F1E25CC3CC4D3EA6B251256284303FB195FB2A06BD3E8A0BCDFF3358EDB9BB5A1606E7B3FFC43B26C1E639CC6AB3259B4DECB863E6AD51949228FD617D038E9A3BB041B437ADD86801506714C998E959E4FD32007E9C6268700956C74F78C3D9370198
	 *  8104000081FF0103014200820282818301003681ED170303018000010203040506070809AABBCCDDEEFFC88C791855C1996407FB11A073B073E8617A14409ACD56E96A867D4315C613735967252FC2CE9A1B5F829BF25996A278393CD98BFCAD8272FB4472DB74496619B8221E5B5A83CAE77BDB7B31112A7009F21F9927BBD92E8B6039A225D98B8253BD0A31F2ED65559BBF9E86D192CF401DD7A1497808BAAF30F1E25CC3CC4D3EA6B251256284303FB195FB2A06BD3E8A0BCDFF3358EDB9BB5A1606E7B3FFC43B26C1E639CC6AB3259B4DECB863E6AD51949228FD617D038E9A3BB041B437ADD86801506714C998E959E4FD32007E9C6268700956C74F78C3D9370198
       //指令里面不用添加参数等
     //D0 0C 81 03 01 42 00 82 02 81 25 B7 01 FF 9000
*/

	/*2016/8/9  星期二
	 * 线程通信，一定要注意其中的端口连接问题捏  端口的问题基本解决，明天开始对接调试 现在的几个主要问题呢......今天的加班时间是
	 * 7点半，时间并不长呢*/
	
}

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.whty.euicc.data.dao.EuiccScp80Mapper" >
  <resultMap id="BaseResultMap" type="com.whty.euicc.data.pojo.EuiccScp80" >
    <id column="scp80_id" property="scp80Id" jdbcType="VARCHAR" />
    <result column="eid" property="eid" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="data" property="data" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    scp80_id, eid, id, version, data
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from euicc_scp80
    where scp80_id = #{scp80Id,jdbcType=VARCHAR}
  </select>
  <select id="selectLists" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from euicc_scp80
  </select>
  <select id="selectByIdAndVersion" resultType="java.lang.String" parameterType="com.whty.euicc.data.pojo.EuiccScp80" >
    select data
    from euicc_scp80
    where id = #{id,jdbcType=VARCHAR} and version = #{version,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from euicc_scp80
    where scp80_id = #{scp80Id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.whty.euicc.data.pojo.EuiccScp80" >
    insert into euicc_scp80 (scp80_id, eid, id, 
      version, data)
    values (#{scp80Id,jdbcType=VARCHAR}, #{eid,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR}, #{data,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.whty.euicc.data.pojo.EuiccScp80" >
    insert into euicc_scp80
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scp80Id != null" >
        scp80_id,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scp80Id != null" >
        #{scp80Id,jdbcType=VARCHAR},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.whty.euicc.data.pojo.EuiccScp80" >
    update euicc_scp80
    <set >
      <if test="eid != null" >
        eid = #{eid,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=VARCHAR},
      </if>
    </set>
    where scp80_id = #{scp80Id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.whty.euicc.data.pojo.EuiccScp80" >
    update euicc_scp80
    set eid = #{eid,jdbcType=VARCHAR},
      id = #{id,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      data = #{data,jdbcType=VARCHAR}
    where scp80_id = #{scp80Id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectListByEid" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from euicc_scp80
    where eid = #{eid,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByEid" parameterType="java.lang.String" >
    delete from euicc_scp80
    where eid = #{eid,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insertListScp80" parameterType="java.util.List">
    insert into euicc_scp80
    values
    <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.scp80Id},#{item.eid},#{item.id},#{item.version},#{item.data})  
    </foreach> 
  </insert>
  
</mapper>
package $!{bean.basePackage}.controller;

import java.util.HashMap;
import java.util.Map;
import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.whty.euicc.common.base.BaseController;
import com.whty.euicc.common.base.DataTableQuery;
import com.whty.euicc.common.utils.CheckEmpty;
import com.whty.euicc.common.utils.DateUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.github.miemiedev.mybatis.paginator.domain.PageBounds;
import com.github.miemiedev.mybatis.paginator.domain.PageList;
import $!{bean.basePackage}.pojo.$!{bean.name};
import $!{bean.basePackage}.pojo.$!{bean.name}Example;
import $!{bean.basePackage}.service.$!{bean.name}Service;


/**
 * @author $!{annotation.authorName}
 * @date $!{annotation.date}
 *
 * @version $!{annotation.version}
 */
@Controller
@RequestMapping("/$!{bean.varName}")
public class $!{bean.name}Controller extends BaseController{

	@Autowired
	$!{bean.name}Service $!{bean.varName}Service;	
	
	/**
	 * 显示主列表页面
	 * @dzmsoftgenerated $!{annotation.date}
	 * @return
	 */
	@RequestMapping(value = "/show", method = RequestMethod.GET)
	public String show() {
		return "modules/$!{bean.varName}/$!{bean.varName}UI";
	}
	
	/**
	 * 查询
	 * @dzmsoftgenerated $!{annotation.date}
	 * @return
	 */
	@RequestMapping(value = "/find")
	public void find(HttpServletRequest request,HttpServletResponse response, $!{bean.name} $!{bean.varName})
			throws IOException {
		DataTableQuery dt = new DataTableQuery(request);
		Map<String,Object> result = buildTableData(dt, $!{bean.varName});
		writeJSONResult(result, response,DateUtil.yyyy_MM_dd_HH_mm_EN);
	}
	
	/**
	 * 构建数据树
	 * @dzmsoftgenerated $!{annotation.date}
	 * @param length
	 * @param start
	 * @param draw
	 * @param modules
	 * @return
	 * @throws IOException
	 */
	private Map<String,Object> buildTableData(DataTableQuery dt,$!{bean.name} $!{bean.varName}) throws IOException {
		// 当前页数
		int currentNumber = dt.getPageStart() / dt.getPageLength() + 1;
		PageBounds pageBounds = new PageBounds(currentNumber, dt.getPageLength());
		$!{bean.name}Example example = buildExample(dt, $!{bean.varName});
		PageList<$!{bean.name}> $!{bean.varName}s = $!{bean.varName}Service.selectByExample(example, pageBounds);
		Map<String,Object> records = new HashMap<String,Object>();
		records.put("data", $!{bean.varName}s);
		records.put("draw", dt.getPageDraw());
		records.put("recordsTotal", $!{bean.varName}s.getPaginator().getTotalCount());
		records.put("recordsFiltered", $!{bean.varName}s.getPaginator().getTotalCount());
		return records;
	}
	
	/**
	 * 构建列表查询条件
	 * @dzmsoftgenerated $!{annotation.date}
	 * @param 
	 * @return
	 */
	private $!{bean.name}Example buildExample(DataTableQuery dt,$!{bean.name} $!{bean.varName}) {
		$!{bean.name}Example $!{bean.varName}Example = new $!{bean.name}Example();
		$!{bean.name}Example.Criteria criteria = $!{bean.varName}Example.createCriteria();
		// 排序条件
		if (CheckEmpty.isNotEmpty(dt.getOrderBy()) && CheckEmpty.isNotEmpty(dt.getOrderParam())){
			// 
			StringBuilder orderByClause = new StringBuilder("");
			orderByClause.append(dt.getOrderParam()).append(" ").append(dt.getOrderBy());
			$!{bean.varName}Example.setOrderByClause(orderByClause.toString());
		}
		return $!{bean.varName}Example;
	}
}
